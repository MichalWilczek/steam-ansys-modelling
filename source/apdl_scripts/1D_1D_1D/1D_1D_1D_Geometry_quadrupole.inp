
coupling_span = 0.001     ! [m]
reel_number = 1
is_reel_number_odd = mod(reel_number, 2)

kp_long_side = division_long_side + 1
kp_short_side = division_short_side + 1
kp_radius = division_radius + 1
division_per_winding = 2*division_long_side+2*division_short_side+4*division_radius
kp_per_winding = division_per_winding + 1
ins_elem_number = number_of_windings*2+1

x=0
y=0
z=0

winding_counter = 1
csys,0
clocal,12,cylin,long_side,0,0
csys,0
clocal,14,cylin,long_side,short_side,0
csys,0
clocal,16,cylin,0,short_side,0
csys,0
clocal,18,cylin,0,0,0
csys,0

*do,a,1,number_of_windings/number_of_windings_in_reel

  *do,b,1,number_of_windings_in_reel

    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
    !!! Here, the winding creation starts !!!
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

    allsel
    *get,kp_first_winding_i,kp,,count
    kp_first_winding_i = kp_first_winding_i + 1

    csys,0
    clocal,11,cart,coupling_span,-radius,0
    csys,11
    *do,j,1,kp_long_side-1,1
      allsel
      *get,knum,kp,,count
      k,knum+1,(j-1)*(long_side-coupling_span)/(division_long_side),0,z
    *enddo

    csys,12
    *do,j,1,kp_radius-1,1
      allsel
      *get,knum,kp,,count
      k,knum+1,radius,(j-1)*(90)/(division_radius)-90,z
    *enddo

    csys,0
    clocal,13,cart,long_side+radius,0,0,90,0,0
    csys,13
    *do,j,1,kp_short_side-1,1
      allsel
      *get,knum,kp,,count
      k,knum+1,(j-1)*(short_side)/(division_short_side),y,z
    *enddo

    csys,14
    *do,j,1,kp_radius-1,1
      allsel
      *get,knum,kp,,count
      k,knum+1,radius,(j-1)*(90)/(division_radius),z
    *enddo

    csys,0
    clocal,15,cart,long_side,radius+short_side,0,180,0,0
    *do,j,1,kp_long_side-1,1
      allsel
      *get,knum,kp,,count
      k,knum+1,(j-1)*(long_side)/(division_long_side),y,z
    *enddo

    csys,16
    *do,j,1,kp_radius-1,1
      allsel
      *get,knum,kp,,count
      k,knum+1,radius,(j-1)*(90)/(division_radius)+90,z
    *enddo

    csys,0
    clocal,17,cart,-radius,short_side,0,270,0,0
    csys,17
    *do,j,1,kp_short_side-1,1
      allsel
      *get,knum,kp,,count
      k,knum+1,(j-1)*(short_side)/(division_short_side),y,z
    *enddo

    csys,18
    *do,j,1,kp_radius,1
      allsel
      *get,knum,kp,,count
      k,knum+1,radius,(j-1)*(90)/(division_radius)-180,z
    *enddo

    allsel
    *get,kp_last_winding_i,kp,,count
    allsel
    *get,knum,kp,,count
    line_counter = knum - division_per_winding
    type,winding_counter
    real,winding_counter
    mat,winding_counter
    *do,k,line_counter,line_counter+division_per_winding-1,1
      l,k,k+1,1
      allsel
      *get,lnum,line,,count
      lmesh,lnum
    *enddo
    allsel
    *get,lnum,line,,count
    lsel,s,line,,lnum+1-division_per_winding,lnum
    allsel,below,line
    cm,winding_line%winding_counter%,line

    cmsel,s,winding_line%winding_counter%
    allsel,below,line
    cm,winding%winding_counter%,elem

      !!!!!!!!!!!!!!!!!!!!!!!!!
      !!!!!!!!!!!!!!!!!!!!!!!!!
      !!! CREATE INSULATION !!!
      !!!!!!!!!!!!!!!!!!!!!!!!!
      !!!!!!!!!!!!!!!!!!!!!!!!!

      *if,insulation_analysis,eq,1,then

        coord_syst_counter = 11
        first_coord_syst = coord_syst_counter

        *dim,insulation_tip_nodes_array%winding_counter%,array,kp_per_winding*4,1,1
        node_ins_tip_counter = 1

        ! get number of keypoints in one
        cmsel,s,winding%winding_counter%
        ! allsel,below,line
        allsel,below,elem
        *get,kps_winding,kp,,count

        ! get maximum keypoint number in the given winding
        cmsel,s,winding%winding_counter%
        allsel,below,line
        *get,kps_max_winding,kp,,num,max
        *get,kps_min_winding,kp,,num,min

        !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        !!!! k is creates four sides of the insulation layer !!!!!!!!!!!!!!!!!!!!
        !!!! j is creates the longitudinal elements of each insulation layer !!!!
        !!!! i creates each layer element separately !!!!!!!!!!!!!!!!!!!!!!!!!!!!
        !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

        !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        ! FIRST LONG SIDE OF THE WINDING !
        !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

        min_kp = kps_min_winding
        max_kp = kps_min_winding+kp_long_side-1

        *do,k,1,4,1

          x_insulation = 0
          y_insulation = 0
          z_insulation = 0

          *do,j,1,trans_division_insulation,1

            *do,i,min_kp,max_kp,1

              allsel
              *get,knum,kp,,count

              csys,coord_syst_counter

              *if,j,eq,1,then
                *get,kposx,kp,i,loc,x
                *get,kposy,kp,i,loc,y
                *get,kposz,kp,i,loc,z
              *else
                *get,kposx,kp,knum+1-kp_long_side,loc,x
                *get,kposy,kp,knum+1-kp_long_side,loc,y
                *get,kposz,kp,knum+1-kp_long_side,loc,z
              *endif

              *if,k,eq,1,then
                y_insulation = + eq_trans_dimension_insulation/trans_division_insulation
              *elseif,k,eq,2,then
                y_insulation = - eq_trans_dimension_insulation/trans_division_insulation
              *elseif,k,eq,3,then
                z_insulation = + eq_trans_dimension_insulation/trans_division_insulation
              *elseif,k,eq,4,then
                z_insulation = - eq_trans_dimension_insulation/trans_division_insulation
              *endif

              k,knum+1,kposx+x_insulation,kposy+y_insulation,kposz+z_insulation

              *if,j,eq,1,then
                l,i,knum+1,1
              *else
                l,knum+1-kp_long_side,knum+1,1
              *endif

			! application of corner nodes
			*if,i,eq,min_kp,then
				type,ins_elem_number+1
				real,ins_elem_number+1
				mat,ins_elem_number+1
			*else
				type,ins_elem_number
				real,ins_elem_number
				mat,ins_elem_number
			*endif

              allsel
              *get,lnum,line,,count
              lmesh,lnum

              !! get the tip node number for further coupling purposes
              *if,j,eq,trans_division_insulation,then
                ksel,s,kp,,knum+1
                nslk,s
                *get,num_node,node,,num,max
                insulation_tip_nodes_array%winding_counter%(node_ins_tip_counter) = num_node
                node_ins_tip_counter = node_ins_tip_counter + 1
              *endif

            *enddo

            allsel
            *get,enum,elem,,count
            esel,s,elem,,enum-division_long_side,enum
            cm,insulation_layer%j%_side%k%_cord%coord_syst_counter%,elem

          *enddo
        *enddo
        coord_syst_counter = coord_syst_counter + 1

        !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        ! FIRST RADIUS OF THE WINIDNG !
        !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

        min_kp = max_kp + 1
        max_kp = kps_min_winding+kp_long_side+kp_radius-2

        *do,k,1,4,1

          x_insulation = 0
          y_insulation = 0
          z_insulation = 0

          *do,j,1,trans_division_insulation,1

            *do,i,min_kp,max_kp,1

              allsel
              *get,knum,kp,,count

              csys,coord_syst_counter

              *if,j,eq,1,then
                *get,kposx,kp,i,loc,x    ! r-axis
                *get,kposy,kp,i,loc,y    ! theta-axis
                *get,kposz,kp,i,loc,z    ! z-axis
              *else
                *get,kposx,kp,knum+2-kp_radius,loc,x
                *get,kposy,kp,knum+2-kp_radius,loc,y
                *get,kposz,kp,knum+2-kp_radius,loc,z
              *endif

              *if,k,eq,1,then
                x_insulation = + eq_trans_dimension_insulation/trans_division_insulation
              *elseif,k,eq,2,then
                x_insulation = - eq_trans_dimension_insulation/trans_division_insulation
              *elseif,k,eq,3,then
                z_insulation = + eq_trans_dimension_insulation/trans_division_insulation
              *elseif,k,eq,4,then
                z_insulation = - eq_trans_dimension_insulation/trans_division_insulation
              *endif

              k,knum+1,kposx+x_insulation,kposy+y_insulation,kposz+z_insulation

              *if,j,eq,1,then
                l,i,knum+1,1
              *else
                l,knum+2-kp_radius,knum+1,1
              *endif

              type,ins_elem_number
              real,ins_elem_number
              mat,ins_elem_number
              allsel
              *get,lnum,line,,count
              lmesh,lnum

              !! get the tip node number for further coupling purposes
              *if,j,eq,trans_division_insulation,then
                ksel,s,kp,,knum+1
                nslk,s
                *get,num_node,node,,num,max
                insulation_tip_nodes_array%winding_counter%(node_ins_tip_counter) = num_node
                node_ins_tip_counter = node_ins_tip_counter + 1
              *endif

            *enddo

            allsel
            *get,enum,elem,,count
            esel,s,elem,,enum-division_radius+1,enum
            cm,insulation_layer%j%_side%k%_cord%coord_syst_counter%,elem

          *enddo
        *enddo
        coord_syst_counter = coord_syst_counter + 1

        !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        ! FIRST SHORT SIDE OF THE WINDING !
        !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

        min_kp = max_kp + 1
        max_kp = kps_min_winding+kp_long_side+kp_radius+kp_short_side-3

        *do,k,1,4,1

          x_insulation = 0
          y_insulation = 0
          z_insulation = 0

          *do,j,1,trans_division_insulation,1

            *do,i,min_kp,max_kp,1

              allsel
              *get,knum,kp,,count

              csys,coord_syst_counter

              *if,j,eq,1,then
                *get,kposx,kp,i,loc,x
                *get,kposy,kp,i,loc,y
                *get,kposz,kp,i,loc,z
              *else
                *get,kposx,kp,knum+2-kp_short_side,loc,x
                *get,kposy,kp,knum+2-kp_short_side,loc,y
                *get,kposz,kp,knum+2-kp_short_side,loc,z
              *endif

              *if,k,eq,1,then
                y_insulation = + eq_trans_dimension_insulation/trans_division_insulation
              *elseif,k,eq,2,then
                y_insulation = - eq_trans_dimension_insulation/trans_division_insulation
              *elseif,k,eq,3,then
                z_insulation = + eq_trans_dimension_insulation/trans_division_insulation
              *elseif,k,eq,4,then
                z_insulation = - eq_trans_dimension_insulation/trans_division_insulation
              *endif

              k,knum+1,kposx+x_insulation,kposy+y_insulation,kposz+z_insulation

              *if,j,eq,1,then
                l,i,knum+1,1
              *else
                l,knum+2-kp_short_side,knum+1,1
              *endif

              type,ins_elem_number
              real,ins_elem_number
              mat,ins_elem_number
              allsel
              *get,lnum,line,,count
              lmesh,lnum

              !! get the tip node number for further coupling purposes
              *if,j,eq,trans_division_insulation,then
                ksel,s,kp,,knum+1
                nslk,s
                *get,num_node,node,,num,max
                insulation_tip_nodes_array%winding_counter%(node_ins_tip_counter) = num_node
                node_ins_tip_counter = node_ins_tip_counter + 1
              *endif

            *enddo

            allsel
            *get,enum,elem,,count
            esel,s,elem,,enum-division_short_side+1,enum
            cm,insulation_layer%j%_side%k%_cord%coord_syst_counter%,elem

          *enddo
        *enddo
        coord_syst_counter = coord_syst_counter + 1

        !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        ! SECOND RADIUS OF THE WINIDNG !
        !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

        min_kp = max_kp + 1
        max_kp = kps_min_winding+kp_long_side+2*kp_radius+kp_short_side-4

        *do,k,1,4,1

          x_insulation = 0
          y_insulation = 0
          z_insulation = 0

          *do,j,1,trans_division_insulation,1

            *do,i,min_kp,max_kp,1

              allsel
              *get,knum,kp,,count

              csys,coord_syst_counter

              *if,j,eq,1,then
                *get,kposx,kp,i,loc,x    ! r-axis
                *get,kposy,kp,i,loc,y    ! theta-axis
                *get,kposz,kp,i,loc,z    ! z-axis
              *else
                *get,kposx,kp,knum+2-kp_radius,loc,x
                *get,kposy,kp,knum+2-kp_radius,loc,y
                *get,kposz,kp,knum+2-kp_radius,loc,z
              *endif

              *if,k,eq,1,then
                x_insulation = + eq_trans_dimension_insulation/trans_division_insulation
              *elseif,k,eq,2,then
                x_insulation = - eq_trans_dimension_insulation/trans_division_insulation
              *elseif,k,eq,3,then
                z_insulation = + eq_trans_dimension_insulation/trans_division_insulation
              *elseif,k,eq,4,then
                z_insulation = - eq_trans_dimension_insulation/trans_division_insulation
              *endif

              k,knum+1,kposx+x_insulation,kposy+y_insulation,kposz+z_insulation

              *if,j,eq,1,then
                l,i,knum+1,1
              *else
                l,knum+2-kp_radius,knum+1,1
              *endif

              type,ins_elem_number
              real,ins_elem_number
              mat,ins_elem_number
              allsel
              *get,lnum,line,,count
              lmesh,lnum

              !! get the tip node number for further coupling purposes
              *if,j,eq,trans_division_insulation,then
                ksel,s,kp,,knum+1
                nslk,s
                *get,num_node,node,,num,max
                insulation_tip_nodes_array%winding_counter%(node_ins_tip_counter) = num_node
                node_ins_tip_counter = node_ins_tip_counter + 1
              *endif

            *enddo

            allsel
            *get,enum,elem,,count
            esel,s,elem,,enum-division_radius+1,enum
            cm,insulation_layer%j%_side%k%_cord%coord_syst_counter%,elem

          *enddo
        *enddo
        coord_syst_counter = coord_syst_counter + 1

        !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        ! SECOND LONG SIDE OF THE WINDING !
        !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

        min_kp = max_kp + 1
        max_kp = kps_min_winding+2*kp_long_side+2*kp_radius+kp_short_side-5

        *do,k,1,4,1

          x_insulation = 0
          y_insulation = 0
          z_insulation = 0

          *do,j,1,trans_division_insulation,1

            *do,i,min_kp,max_kp,1

              allsel
              *get,knum,kp,,count

              csys,coord_syst_counter

              *if,j,eq,1,then
                *get,kposx,kp,i,loc,x
                *get,kposy,kp,i,loc,y
                *get,kposz,kp,i,loc,z
              *else
                *get,kposx,kp,knum+2-kp_long_side,loc,x
                *get,kposy,kp,knum+2-kp_long_side,loc,y
                *get,kposz,kp,knum+2-kp_long_side,loc,z
              *endif

              *if,k,eq,1,then
                y_insulation = + eq_trans_dimension_insulation/trans_division_insulation
              *elseif,k,eq,2,then
                y_insulation = - eq_trans_dimension_insulation/trans_division_insulation
              *elseif,k,eq,3,then
                z_insulation = + eq_trans_dimension_insulation/trans_division_insulation
              *elseif,k,eq,4,then
                z_insulation = - eq_trans_dimension_insulation/trans_division_insulation
              *endif

              k,knum+1,kposx+x_insulation,kposy+y_insulation,kposz+z_insulation

              *if,j,eq,1,then
                l,i,knum+1,1
              *else
                l,knum+2-kp_long_side,knum+1,1
              *endif

              type,ins_elem_number
              real,ins_elem_number
              mat,ins_elem_number
              allsel
              *get,lnum,line,,count
              lmesh,lnum

              !! get the tip node number for further coupling purposes
              *if,j,eq,trans_division_insulation,then
                ksel,s,kp,,knum+1
                nslk,s
                *get,num_node,node,,num,max
                insulation_tip_nodes_array%winding_counter%(node_ins_tip_counter) = num_node
                node_ins_tip_counter = node_ins_tip_counter + 1
              *endif

            *enddo

            allsel
            *get,enum,elem,,count
            esel,s,elem,,enum-division_long_side+1,enum
            cm,insulation_layer%j%_side%k%_cord%coord_syst_counter%,elem

          *enddo
        *enddo
        coord_syst_counter = coord_syst_counter + 1

        !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        ! THIRD RADIUS OF THE WINIDNG !
        !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

        min_kp = max_kp + 1
        max_kp = kps_min_winding+2*kp_long_side+3*kp_radius+kp_short_side-6

        *do,k,1,4,1

          x_insulation = 0
          y_insulation = 0
          z_insulation = 0

          *do,j,1,trans_division_insulation,1

            *do,i,min_kp,max_kp,1

              allsel
              *get,knum,kp,,count

              csys,coord_syst_counter

              *if,j,eq,1,then
                *get,kposx,kp,i,loc,x    ! r-axis
                *get,kposy,kp,i,loc,y    ! theta-axis
                *get,kposz,kp,i,loc,z    ! z-axis
              *else
                *get,kposx,kp,knum+2-kp_radius,loc,x
                *get,kposy,kp,knum+2-kp_radius,loc,y
                *get,kposz,kp,knum+2-kp_radius,loc,z
              *endif

              *if,k,eq,1,then
                x_insulation = + eq_trans_dimension_insulation/trans_division_insulation
              *elseif,k,eq,2,then
                x_insulation = - eq_trans_dimension_insulation/trans_division_insulation
              *elseif,k,eq,3,then
                z_insulation = + eq_trans_dimension_insulation/trans_division_insulation
              *elseif,k,eq,4,then
                z_insulation = - eq_trans_dimension_insulation/trans_division_insulation
              *endif

              k,knum+1,kposx+x_insulation,kposy+y_insulation,kposz+z_insulation

              *if,j,eq,1,then
                l,i,knum+1,1
              *else
                l,knum+2-kp_radius,knum+1,1
              *endif

              type,ins_elem_number
              real,ins_elem_number
              mat,ins_elem_number
              allsel
              *get,lnum,line,,count
              lmesh,lnum

              !! get the tip node number for further coupling purposes
              *if,j,eq,trans_division_insulation,then
                ksel,s,kp,,knum+1
                nslk,s
                *get,num_node,node,,num,max
                insulation_tip_nodes_array%winding_counter%(node_ins_tip_counter) = num_node
                node_ins_tip_counter = node_ins_tip_counter + 1
              *endif

            *enddo

            allsel
            *get,enum,elem,,count
            esel,s,elem,,enum-division_radius+1,enum
            cm,insulation_layer%j%_side%k%_cord%coord_syst_counter%,elem

          *enddo
        *enddo
        coord_syst_counter = coord_syst_counter + 1

        !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        ! SECOND SHORT SIDE OF THE WINDING !
        !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

        min_kp = max_kp + 1
        max_kp = kps_min_winding+2*kp_long_side+3*kp_radius+2*kp_short_side-7

        *do,k,1,4,1

          x_insulation = 0
          y_insulation = 0
          z_insulation = 0

          *do,j,1,trans_division_insulation,1

            *do,i,min_kp,max_kp,1

              allsel
              *get,knum,kp,,count

              csys,coord_syst_counter

              *if,j,eq,1,then
                *get,kposx,kp,i,loc,x
                *get,kposy,kp,i,loc,y
                *get,kposz,kp,i,loc,z
              *else
                *get,kposx,kp,knum+2-kp_short_side,loc,x
                *get,kposy,kp,knum+2-kp_short_side,loc,y
                *get,kposz,kp,knum+2-kp_short_side,loc,z
              *endif

              *if,k,eq,1,then
                y_insulation = + eq_trans_dimension_insulation/trans_division_insulation
              *elseif,k,eq,2,then
                y_insulation = - eq_trans_dimension_insulation/trans_division_insulation
              *elseif,k,eq,3,then
                z_insulation = + eq_trans_dimension_insulation/trans_division_insulation
              *elseif,k,eq,4,then
                z_insulation = - eq_trans_dimension_insulation/trans_division_insulation
              *endif

              k,knum+1,kposx+x_insulation,kposy+y_insulation,kposz+z_insulation

              *if,j,eq,1,then
                l,i,knum+1,1
              *else
                l,knum+2-kp_short_side,knum+1,1
              *endif

              type,ins_elem_number
              real,ins_elem_number
              mat,ins_elem_number
              allsel
              *get,lnum,line,,count
              lmesh,lnum

              !! get the tip node number for further coupling purposes
              *if,j,eq,trans_division_insulation,then
                ksel,s,kp,,knum+1
                nslk,s
                *get,num_node,node,,num,max
                insulation_tip_nodes_array%winding_counter%(node_ins_tip_counter) = num_node
                node_ins_tip_counter = node_ins_tip_counter + 1
              *endif

            *enddo

            allsel
            *get,enum,elem,,count
            esel,s,elem,,enum-division_short_side+1,enum
            cm,insulation_layer%j%_side%k%_cord%coord_syst_counter%,elem

          *enddo
        *enddo
        coord_syst_counter = coord_syst_counter + 1

        !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        ! FOURTH RADIUS OF THE WINIDNG !
        !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

        min_kp = max_kp + 1
        max_kp = kps_min_winding+2*kp_long_side+4*kp_radius+2*kp_short_side-8

        *do,k,1,4,1

          x_insulation = 0
          y_insulation = 0
          z_insulation = 0

          *do,j,1,trans_division_insulation,1

            *do,i,min_kp,max_kp,1

              allsel
              *get,knum,kp,,count

              csys,coord_syst_counter

              *if,j,eq,1,then
                *get,kposx,kp,i,loc,x    ! r-axis
                *get,kposy,kp,i,loc,y    ! theta-axis
                *get,kposz,kp,i,loc,z    ! z-axis
              *else
                *get,kposx,kp,knum+2-kp_radius,loc,x
                *get,kposy,kp,knum+2-kp_radius,loc,y
                *get,kposz,kp,knum+2-kp_radius,loc,z
              *endif

              *if,k,eq,1,then
                x_insulation = + eq_trans_dimension_insulation/trans_division_insulation
              *elseif,k,eq,2,then
                x_insulation = - eq_trans_dimension_insulation/trans_division_insulation
              *elseif,k,eq,3,then
                z_insulation = + eq_trans_dimension_insulation/trans_division_insulation
              *elseif,k,eq,4,then
                z_insulation = - eq_trans_dimension_insulation/trans_division_insulation
              *endif

              k,knum+1,kposx+x_insulation,kposy+y_insulation,kposz+z_insulation

              *if,j,eq,1,then
                l,i,knum+1,1
              *else
                l,knum+2-kp_radius,knum+1,1
              *endif

			! application of corner nodes
			*if,i,eq,max_kp,then
				type,ins_elem_number+1
				real,ins_elem_number+1
				mat,ins_elem_number+1
			*else
				type,ins_elem_number
				real,ins_elem_number
				mat,ins_elem_number
			*endif

              allsel
              *get,lnum,line,,count
              lmesh,lnum

              !! get the tip node number for further coupling purposes
              *if,j,eq,trans_division_insulation,then
                ksel,s,kp,,knum+1
                nslk,s
                *get,num_node,node,,num,max
                insulation_tip_nodes_array%winding_counter%(node_ins_tip_counter) = num_node
                node_ins_tip_counter = node_ins_tip_counter + 1
              *endif

            *enddo

            allsel
            *get,enum,elem,,count
            esel,s,elem,,enum-division_radius+1,enum
            cm,insulation_layer%j%_side%k%_cord%coord_syst_counter%,elem

          *enddo
        *enddo

        ! create named selection for each insulation layer of every winding
        *do,l,1,trans_division_insulation,1
          *do,n,first_coord_syst,coord_syst_counter
            *do,m,1,4,1
              *if,m,eq,1,and,n,eq,first_coord_syst,then
                cmsel,s,insulation_layer%l%_side%m%_cord%n%
              *else
                cmsel,a,insulation_layer%l%_side%m%_cord%n%
              *endif
            *enddo
          *enddo
          cm,insulation_layer%l%_winding%winding_counter%,elem
        *enddo

        ! created named selection for entire insulation of every winding
        *do,l,1,trans_division_insulation,1
          *if,l,eq,1,then
            cmsel,s,insulation_layer%l%_winding%winding_counter%
          *else
            cmsel,a,insulation_layer%l%_winding%winding_counter%
          *endif
        *enddo
        cm,insulation_winding%winding_counter%,elem

        ! create named selection of winding with insulation
        cmsel,s,insulation_winding%winding_counter%
        cmsel,a,winding%winding_counter%
        cm,winding_with_insulation%winding_counter%,elem

        ! create named selection of winding with insulation only for nodes
        cmsel,s,winding_with_insulation%winding_counter%
        allsel,below,elem
        cm,winding_with_insulation_nodes%winding_counter%,node

      *endif
    x = x
    *if,is_reel_number_odd,ne,0,then
      z = z + trans_dimension_winding
    *else
      z = z - (trans_dimension_winding)
    *endif
    y = y
    winding_counter = winding_counter + 1
  *enddo

  ! winding_counter = winding_counter + 1
  reel_number = reel_number + 1
  is_reel_number_odd = mod(reel_number, 2)

  *if,is_reel_number_odd,ne,0,then
    z = z + trans_dimension_winding
  *else
    z = z - (trans_dimension_winding)
  *endif
  radius = radius + trans_dimension_winding
*enddo

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!! Coupling algorithm for the insulation nodes !!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

*if,insulation_analysis,eq,1,then
  allsel
  tolerance_range = trans_dimension_winding - 2*eq_trans_dimension_insulation
  *do,j,1,number_of_windings,2

    *do,i,1,kp_per_winding*4,1,1
      nnode = insulation_tip_nodes_array%j%(i)
      csys,0
      allsel
      *get,nposx,node,nnode,loc,x
      *get,nposy,node,nnode,loc,y
      *get,nposz,node,nnode,loc,z

      clocal,20,sphe,nposx,nposy,nposz
      csys,20
      nsel,s,loc,x,tolerance_range
      cm,cur_node_set,node
      cmsel,u,winding_with_insulation_nodes%j%

      *get,num_node,node,,count
      *if,num_node,eq,1,then
        *get,num_node,node,,num,max
        allsel
        cp,next,temp,nnode,num_node
      *endif
    *enddo
  *enddo
*endif

! definition of winding nodes without insulation
*do,i,1,number_of_windings
  cmsel,s,winding%i%
  allsel,below,elem
  *dim,node_list_winding_%i%,array,division_per_winding+1,1
  *vget,node_list_winding_%i%,node,,nlist
  *mwrite,node_list_winding_%i%,Nodes_winding_without_insul_%i%,txt
  (1E20.10)
*enddo

! definition of winding nodes with insulation
*if,insulation_analysis,eq,1,then
  *do,i,1,number_of_windings
    cmsel,s,winding_with_insulation%i%
    allsel,below,elem
    *get,node_wind_ins_count,node,,count
    *dim,node_list_winding_ins%i%,array,node_wind_ins_count,1
    *vget,node_list_winding_ins%i%,node,,nlist
    *mwrite,node_list_winding_ins%i%,Nodes_winding_with_insul_%i%,txt
    (1E20.10)
  *enddo
*endif

! definition of node position in coordinate system
csys,0
allsel
*get,nnum_windings,node,,count
*dim,node_loc_windings,array,nnum_windings,4
*vget,node_loc_windings(1,1),node,,nlist
*vget,node_loc_windings(1,2),node,,loc,x
*vget,node_loc_windings(1,3),node,,loc,y
*vget,node_loc_windings(1,4),node,,loc,z
*mwrite,node_loc_windings,Node_Position,txt
(4E20.10)

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!! definition of nodes in every plane !!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

test1=number_of_windings/number_of_windings_in_reel
test2=number_of_windings_in_reel

*if,test1,ge,test2,then
  range_side = trans_dimension_winding*test1*sqrt(2)
*else
  range_side = trans_dimension_winding*test2*sqrt(2)
*endif
tolerance_range = 1e-8

! set 1
set_1_low = 1
set_1_high = 1+kp_long_side-1

! set 2
set_2_low = set_1_high+1
set_2_high = 1+kp_long_side+kp_radius-2

! set 3
set_3_low = set_2_high+1
set_3_high = 1+kp_long_side+kp_radius+kp_short_side-3

! set 4
set_4_low = set_3_high+1
set_4_high = 1+kp_long_side+2*kp_radius+kp_short_side-4

! set 5
set_5_low = set_4_high+1
set_5_high = 1+2*kp_long_side+2*kp_radius+kp_short_side-5

! set 6
set_6_low = set_5_high+1
set_6_high = 1+2*kp_long_side+3*kp_radius+kp_short_side-6

! set 7
set_7_low = set_6_high+1
set_7_high =1+2*kp_long_side+3*kp_radius+2*kp_short_side-7

!set 8
set_8_low = set_7_high+1
set_8_high = 1+2*kp_long_side+4*kp_radius+2*kp_short_side-8

*do,i,1,kp_per_winding,1

  nsel,s,node,,i
  *get,node_num,node,0,num,max

*if,i,ge,set_1_low,and,i,le,set_1_high,then
  csys,0
  *get,node_num_loc,node,node_num,loc,x
  nsel,s,loc,x,node_num_loc-tolerance_range,node_num_loc+tolerance_range

*elseif,i,ge,set_2_low,and,i,le,set_2_high,then
  csys,12
  *get,node_num_loc,node,node_num,loc,y
  nsel,s,loc,y,node_num_loc-tolerance_range,node_num_loc+tolerance_range

*elseif,i,ge,set_3_low,and,i,le,set_3_high,then
  csys,0
  *get,node_num_loc,node,node_num,loc,y
  nsel,s,loc,y,node_num_loc-tolerance_range,node_num_loc+tolerance_range

*elseif,i,ge,set_4_low,and,i,le,set_4_high,then
  csys,14
  *get,node_num_loc,node,node_num,loc,y
  nsel,s,loc,y,node_num_loc-tolerance_range,node_num_loc+tolerance_range

*elseif,i,ge,set_5_low,and,i,le,set_5_high,then
  csys,0
  *get,node_num_loc,node,node_num,loc,x
  nsel,s,loc,x,node_num_loc-tolerance_range,node_num_loc+tolerance_range

*elseif,i,ge,set_6_low,and,i,le,set_6_high,then
  csys,16
  *get,node_num_loc,node,node_num,loc,y
  nsel,s,loc,y,node_num_loc-tolerance_range,node_num_loc+tolerance_range

*elseif,i,ge,set_7_low,and,i,le,set_7_high,then
  csys,0
  *get,node_num_loc,node,node_num,loc,y
  nsel,s,loc,y,node_num_loc-tolerance_range,node_num_loc+tolerance_range

*elseif,i,ge,set_8_low,and,i,le,set_8_high,then
  csys,18
  *get,node_num_loc,node,node_num,loc,y
  nsel,s,loc,y,node_num_loc-tolerance_range,node_num_loc+tolerance_range

*endif

  csys,0
  *get,nposx,node,i,loc,x
  *get,nposy,node,i,loc,y
  *get,nposz,node,i,loc,z
  clocal,20,sphe,nposx,nposy,nposz
  csys,20
  nsel,r,loc,x,0,range_side+tolerance_range

  *get,node_plane_count,node,,count
  *dim,node_list_plane%i%,array,node_plane_count,1
  *vget,node_list_plane%i%,node,,nlist
  *mwrite,node_list_plane%i%,Nodes_plane_%i%,txt
  (1E20.10)
*enddo

! definition of number of nodes in all strands
! altogether with insulation nodes
*do,i,1,number_of_windings
  *if,i,eq,1,then
    cmsel,s,winding_with_insulation%i%
  *else
    cmsel,a,winding_with_insulation%i%
  *endif
  allsel,below,elem
  *get,nnode,node,,count
*enddo
*cfopen,Nnode,txt
*vwrite,nnode
(1(ES16.7))
*cfclose

! definition of coil domain 
*do,i,1,number_of_windings
	*if,i,eq,1,then
	    cmsel,s,winding_with_insulation%i%
	*else
		cmsel,a,winding_with_insulation%i%
	*endif
	cm,magnet_coil,elem
*enddo

*cfopen,Process_Finished,txt
*vwrite,1
(1(ES16.7))
*cfclose

save
